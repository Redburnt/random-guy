
# Generated by Qodo Gen

# Dependencies:
# pip install pytest-mock
import pytest

class TestSaveToJson:

    # Successfully saves a dictionary of locations to a JSON file
    def test_saves_locations_to_json_file(self, mocker):
        # Arrange
        locations = {
            "New York": {"lat": 40.7128, "lon": -74.0060},
            "London": {"lat": 51.5074, "lon": -0.1278}
        }
        filename = "test_locations.json"
        mock_open = mocker.patch("builtins.open", mocker.mock_open())
        mock_json_dump = mocker.patch("json.dump")
    
        # Act
        from random_locations import save_to_json
        save_to_json(locations, filename)
    
        # Assert
        mock_open.assert_called_once_with(filename, "w")
        mock_json_dump.assert_called_once_with(locations, mock_open(), indent=4)

    # Handles empty locations dictionary or list
    def test_handles_empty_locations(self, mocker):
        # Arrange
        empty_locations = {}
        filename = "empty_locations.json"
        mock_open = mocker.patch("builtins.open", mocker.mock_open())
        mock_json_dump = mocker.patch("json.dump")
    
        # Act
        from random_locations import save_to_json
        save_to_json(empty_locations, filename)
    
        # Assert
        mock_open.assert_called_once_with(filename, "w")
        mock_json_dump.assert_called_once_with(empty_locations, mock_open(), indent=4)